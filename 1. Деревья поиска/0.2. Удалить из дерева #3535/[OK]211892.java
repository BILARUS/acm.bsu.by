import java.io.*;
 import java.util.*;
 public class Node { private Integer value; private Node left; private Node right; Node(int value){ this.left = null; this.right = null; this.value = value; } public Node Insert( Node tree, int value){ if( tree == null){ return new Node(value); } if(tree.value.compareTo(value) == 1){ tree.left = Insert(tree.left,value); } if(tree.value.compareTo(value) == -1){ tree.right = Insert(tree.right,value); } return tree; } void Print(PrintWriter out){ out.println(this.value); } public void DirectLeft(PrintWriter out){ Print(out); if (left!=null) left.DirectLeft(out); if (right!=null) right.DirectLeft(out); } public Node Min(Node tree){ if(tree.left != null) return Min(tree.left); else return tree; } public Node Delete(Node tree,int value) { if (tree.left == null && tree.right == null) { return null; } if (value < tree.value) { tree.left = Delete(tree.left, value); return tree; } else if(value > tree.value){ tree.right = Delete(tree.right, value); return tree; } if(tree.right == null) return tree.left; else if(tree.left == null) return tree.right; else { int min_value = Min(tree.right).value; tree.value = min_value; tree.right = Delete(tree.right, min_value); return tree; } } boolean Del(List<Integer> list,int del_el){ for(int i=0; i < list.size();i++){ if(del_el == list.get(i)) return true; } return false; } public static void main(String [] args)throws IOException{ BufferedReader br = new BufferedReader(new FileReader("input.txt")); PrintWriter out = new PrintWriter(new FileWriter("output.txt")); String line; List<Integer> list = new ArrayList<>(); int delete_value = Integer.parseInt(br.readLine()); br.readLine(); while ((line = br.readLine()) != null) { list.add(Integer.parseInt(line)); } Iterator<Integer> it = list.iterator(); Node tree = new Node(it.next()); while(it.hasNext()){ tree = tree.Insert(tree,it.next()); } if(tree.Del(list,delete_value)) { tree = tree.Delete(tree, delete_value); } tree.DirectLeft(out); out.flush(); } }